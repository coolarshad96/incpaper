[{"/home/saiyad/incpaper/vendorpaper/src/index.js":"1","/home/saiyad/incpaper/vendorpaper/src/reportWebVitals.js":"2","/home/saiyad/incpaper/vendorpaper/src/App.js":"3","/home/saiyad/incpaper/vendorpaper/src/firebase.js":"4","/home/saiyad/incpaper/vendorpaper/src/Auth.js":"5","/home/saiyad/incpaper/vendorpaper/src/views/SignUp.js":"6","/home/saiyad/incpaper/vendorpaper/src/views/ForgotPassword.js":"7","/home/saiyad/incpaper/vendorpaper/src/views/Home.js":"8","/home/saiyad/incpaper/vendorpaper/src/views/CreateCompany.js":"9","/home/saiyad/incpaper/vendorpaper/src/views/SignIn.js":"10","/home/saiyad/incpaper/vendorpaper/src/views/CreateProduct.js":"11","/home/saiyad/incpaper/vendorpaper/src/views/ShowPage.js":"12","/home/saiyad/incpaper/vendorpaper/src/views/ChatPage.js":"13","/home/saiyad/incpaper/vendorpaper/src/views/Product.js":"14","/home/saiyad/incpaper/vendorpaper/src/views/SearchPage.js":"15","/home/saiyad/incpaper/vendorpaper/src/views/ChatInput.js":"16","/home/saiyad/incpaper/vendorpaper/src/views/MessageList.js":"17","/home/saiyad/incpaper/vendorpaper/src/views/Message.js":"18","/home/saiyad/incpaper/vendorpaper/src/store/reducers/userSlice.js":"19","/home/saiyad/incpaper/vendorpaper/src/store/store.js":"20","/home/saiyad/incpaper/vendorpaper/src/store/rootReducer.js":"21","/home/saiyad/incpaper/vendorpaper/src/components/NavBar.js":"22","/home/saiyad/incpaper/vendorpaper/src/components/Logo.js":"23","/home/saiyad/incpaper/vendorpaper/src/components/SearchBar.js":"24","/home/saiyad/incpaper/vendorpaper/src/components/CreateButton.js":"25","/home/saiyad/incpaper/vendorpaper/src/components/Notification.js":"26","/home/saiyad/incpaper/vendorpaper/src/components/UserAccount.js":"27","/home/saiyad/incpaper/vendorpaper/src/components/HomePage.js":"28","/home/saiyad/incpaper/vendorpaper/src/components/HomePageTile.js":"29","/home/saiyad/incpaper/vendorpaper/src/components/ListItem.js":"30","/home/saiyad/incpaper/vendorpaper/src/components/CategoryList.js":"31","/home/saiyad/incpaper/vendorpaper/src/components/RegionList.js":"32","/home/saiyad/incpaper/vendorpaper/src/components/ProductTile.js":"33","/home/saiyad/incpaper/vendorpaper/src/components/ProductImageViewer.js":"34"},{"size":655,"mtime":1694274118932,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1678817948241,"results":"37","hashOfConfig":"36"},{"size":1379,"mtime":1694271222362,"results":"38","hashOfConfig":"36"},{"size":502,"mtime":1678820307409,"results":"39","hashOfConfig":"36"},{"size":618,"mtime":1678999034709,"results":"40","hashOfConfig":"36"},{"size":1777,"mtime":1678821946871,"results":"41","hashOfConfig":"36"},{"size":1037,"mtime":1679077505534,"results":"42","hashOfConfig":"36"},{"size":2468,"mtime":1694966153666,"results":"43","hashOfConfig":"36"},{"size":15867,"mtime":1695351713028,"results":"44","hashOfConfig":"36"},{"size":2866,"mtime":1694274498216,"results":"45","hashOfConfig":"36"},{"size":16143,"mtime":1695359207093,"results":"46","hashOfConfig":"36"},{"size":13197,"mtime":1695359696657,"results":"47","hashOfConfig":"36"},{"size":560,"mtime":1691697007342,"results":"48","hashOfConfig":"36"},{"size":4985,"mtime":1695237871128,"results":"49","hashOfConfig":"36"},{"size":12090,"mtime":1695346999216,"results":"50","hashOfConfig":"36"},{"size":640,"mtime":1691697068028,"results":"51","hashOfConfig":"36"},{"size":322,"mtime":1691697026493,"results":"52","hashOfConfig":"36"},{"size":214,"mtime":1691697050020,"results":"53","hashOfConfig":"36"},{"size":1144,"mtime":1694276191269,"results":"54","hashOfConfig":"36"},{"size":234,"mtime":1694271922998,"results":"55","hashOfConfig":"36"},{"size":181,"mtime":1694273384614,"results":"56","hashOfConfig":"36"},{"size":839,"mtime":1694969453110,"results":"57","hashOfConfig":"36"},{"size":275,"mtime":1694976317951,"results":"58","hashOfConfig":"36"},{"size":803,"mtime":1694970484496,"results":"59","hashOfConfig":"36"},{"size":300,"mtime":1694969293406,"results":"60","hashOfConfig":"36"},{"size":300,"mtime":1694969431065,"results":"61","hashOfConfig":"36"},{"size":907,"mtime":1694949953068,"results":"62","hashOfConfig":"36"},{"size":4613,"mtime":1695066580242,"results":"63","hashOfConfig":"36"},{"size":408,"mtime":1694981849325,"results":"64","hashOfConfig":"36"},{"size":1502,"mtime":1695062918162,"results":"65","hashOfConfig":"36"},{"size":1311,"mtime":1695149713436,"results":"66","hashOfConfig":"36"},{"size":1532,"mtime":1695066044198,"results":"67","hashOfConfig":"36"},{"size":441,"mtime":1695184192867,"results":"68","hashOfConfig":"36"},{"size":2001,"mtime":1695238652408,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"1753pcn",{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"73"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"101"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"73"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"101"},"/home/saiyad/incpaper/vendorpaper/src/index.js",[],[],[],"/home/saiyad/incpaper/vendorpaper/src/reportWebVitals.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/App.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/firebase.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/Auth.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/views/SignUp.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/views/ForgotPassword.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/views/Home.js",["181","182","183","184","185","186"],[],"import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { auth } from '../firebase';\nimport { AuthContext } from '../Auth';\nimport './Home.css';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { clearUser } from '../store/reducers/userSlice';\nimport NavBar from '../components/NavBar';\nimport HomePage from '../components/HomePage';\n\nfunction Home() {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n  const { currentUser } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const handleSignOut = async () => {\n    try {\n      await auth.signOut();\n      dispatch(clearUser());\n      navigate('/signin')\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const companies = [\n    {\n      id: 1,\n      name: 'ABC Corp',\n      email: 'abc@abc.com',\n      phone: '555-1234',\n    },\n    {\n      id: 2,\n      name: 'XYZ Inc',\n      email: 'xyz@xyz.com',\n      phone: '555-5678',\n    },\n    {\n      id: 3,\n      name: 'PQR Industries',\n      email: 'pqr@pqr.com',\n      phone: '555-9876',\n    },\n  ];\n \n  const storedData = JSON.parse(sessionStorage.getItem('userData'));\n  return (<>\n  <NavBar />\n  <HomePage />\n\n  {/* <div>\n      <h1>Hi</h1>\n      {currentUser ? <p>Welcome, {currentUser?.displayName}!</p>: <p>Welcome, Guest!</p>}\n      <button onClick={handleSignOut}>Log Out</button>\n\n      <div className=\"companies-container\">\n        {companies.map((company) => (\n          <div key={company.id} className=\"company-box\">\n            <h2>{company.name}</h2>\n            <p><span className=\"label\">Email:</span> {company.email}</p>\n            <p><span className=\"label\">Phone:</span> {company.phone}</p>\n          </div>\n        ))}\n      </div>\n      <div>\n      {user.uid != '' ? (\n        <div>\n          <h2>Welcome from store, {user.displayName}</h2>\n          <p>Email: {user.email}</p>\n          <p>Uid: {user.uid}</p>\n          <p>stsTokenManager: {user.stsTokenManager['accessToken']}</p>\n        </div>\n      ) : (\n        (\n          <div>\n            <h2>Welcome from store, {storedData?.displayName}</h2>\n            <p>Email: {storedData?.email}</p>\n            <p>Uid: {storedData?.uid}</p>\n            <p>stsTokenManager: {storedData?.stsTokenManager['accessToken']}</p>\n          </div>\n        )\n      )}\n    </div>\n    </div> */}\n  </>\n    \n  );\n}\n\nexport default Home;\n",[],"/home/saiyad/incpaper/vendorpaper/src/views/CreateCompany.js",["187"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./CreateCompany.css\";\nimport NavBar from \"../components/NavBar\";\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8000',\n});\n\nfunction CreateCompany() {\n  const [inputSets, setInputSets] = useState(1);\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const [companyData, setCompanyData] = useState({\n    id: '',\n    name: '',\n    logo: null,\n    address: '',\n    phone: '',\n    email: '',\n    fax: '',\n    website: '',\n    description: '',\n    location: '',\n  });\n  const handleInputChange = (event) => {\n    const { name, value, type } = event.target;\n    const newValue = type === 'file' ? event.target.files[0] : value;\n    setCompanyData((prevFormData) => ({\n      ...prevFormData,\n      [name]: newValue,\n    }));\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response1 = await api.get('/company/company/20/');\n        const companyDataFromApi = response1.data;\n        setCompanyData(companyDataFromApi);\n        console.log(companyDataFromApi)\n\n        const response2 = await api.get('/company/images/');\n        setUploadedImages(response2.data);\n        // console.log(response2)\n\n\n        const response3 = await api.get('/company/time/');\n        setData(response3.data);\n        // console.log(response3)\n      } catch (error) {\n        // Handle errors if necessary\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n\n\n  function getCookie(name) {\n    const cookieValue = document.cookie.match('(^|;)\\\\s*' + name + '\\\\s*=\\\\s*([^;]+)');\n    return cookieValue ? cookieValue.pop() : '';\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const formData = new FormData(event.target);\n\n    formData.append('name', event.target.company_name.value);\n    formData.append('logo', event.target.company_logo.files[0]);\n    formData.append('address', event.target.company_address.value);\n    formData.append('phone', event.target.company_phone.value);\n    formData.append('email', event.target.company_email.value);\n    formData.append('fax', event.target.company_fax.value);\n    formData.append('website', event.target.company_website.value);\n    formData.append('description', event.target.company_description.value);\n    formData.append('location', event.target.company_location.value);\n\n    const csrftoken = getCookie('csrftoken');\n    console.log(csrftoken)\n    formData.append('csrfmiddlewaretoken', csrftoken);\n\n    // Access form data using formData.get('field_name')\n    // Perform actions with the form data, e.g., make an API request\n\n    try {\n      const response = await api.post('http://localhost:8000/company/company/', formData, {\n        headers: {\n          'X-CSRFToken': csrftoken,\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      // Handle the response here\n      console.log(response);\n    } catch (error) {\n      // Handle errors here\n      console.error(error);\n    }\n  };\n\n  const handleImageSubmit = async (event) => {\n    event.preventDefault();\n    // Handle form submission logic here\n    try {\n      await Promise.all(\n        uploadedImages.map(async (image) => {\n          await uploadImage(image, 20);\n        })\n      );\n\n      // Handle successful form submission here\n      console.log('All images uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading images', error);\n    }\n  };\n\n  const uploadImage = async (file, company_id) => {\n    const csrftoken = getCookie('csrftoken');\n    try {\n\n      const formData = new FormData();\n      formData.append('image', file); // Make sure the file is appended with the correct key 'image'\n      formData.append('company', company_id); // Make sure the company_id is appended with the correct key 'company'\n\n      const response = await api.post('/company/images/', formData, {\n        headers: {\n          'X-CSRFToken': csrftoken,\n          'Content-Type': 'multipart/form-data', // Ensure Content-Type is set correctly\n        },\n      });\n\n      if (response.status === 200) {\n        // Image uploaded successfully\n        console.log('Image uploaded successfully!');\n      } else {\n        // Handle upload failure\n        console.error('Failed to upload image');\n      }\n    } catch (error) {\n      console.error('Error uploading image', error);\n    }\n  };\n\n\n  const handleAddInputSet = () => {\n    setInputSets((prevInputSets) => prevInputSets + 1);\n  };\n  const getUrl = (file) => {\n    return file.image || URL.createObjectURL(file);\n  }\n  const handleFileChange = (event, index) => {\n    const file = event.target.files[0];\n    // const imageUrl = URL.createObjectURL(file); // Create a temporary URL for the selected image file\n    setUploadedImages((prevImages) => {\n      const newImages = [...prevImages];\n      newImages[index] = file; // Use the URL as the src for the image\n      return newImages;\n    });\n  };\n\n  const [data, setData] = useState([\n    { day: 'monday', opening: '9:00 AM', closing: '5:00 PM' },\n    { day: 'tuesday', opening: '9:00 AM', closing: '5:00 PM' },\n    { day: 'wednesday', opening: '9:00 AM', closing: '5:00 PM' },\n    { day: 'thursday', opening: '9:00 AM', closing: '5:00 PM' },\n    { day: 'friday', opening: '9:00 AM', closing: '5:00 PM' },\n    { day: 'saturday', opening: '9:00 AM', closing: '5:00 PM' },\n    { day: 'sunday', opening: 'Closed', closing: 'Closed' },\n  ]);\n\n  const handleTimeChange = (index, field, value) => {\n    const newData = [...data];\n    newData[index][field] = value;\n    setData(newData);\n  };\n  const handleTimeSubmit = async (event) => {\n    event.preventDefault();\n    // Handle form submission logic here\n    try {\n      await Promise.all(\n        data.map(async (time) => {\n          await uploadTime(time, 20);\n        })\n      );\n\n      // Handle successful form submission here\n      console.log('All images uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading images', error);\n    }\n  };\n  const uploadTime = async (time, company_id) => {\n    const csrftoken = getCookie('csrftoken');\n    try {\n\n      const formData = new FormData();\n      formData.append('day', time['day']);\n      formData.append('opening', time['opening']);\n      formData.append('closing', time['closing']);\n      formData.append('company', company_id); // Make sure the company_id is appended with the correct key 'company'\n\n      const response = await api.post('/company/time/', formData, {\n        headers: {\n          'X-CSRFToken': csrftoken,\n          'Content-Type': 'multipart/form-data', // Ensure Content-Type is set correctly\n        },\n      });\n\n      if (response.status === 200) {\n        // Image uploaded successfully\n        console.log('Time table uploaded successfully!');\n      } else {\n        // Handle upload failure\n        console.error('Failed to upload time table');\n      }\n    } catch (error) {\n      console.error('Error uploading time table', error);\n    }\n  };\n\n  return (\n    <>\n      <NavBar />\n      <div className='companycreate-container'>\n        <div className=\"companycreate-left\"></div>\n        <div className=\"companycreate-body\">\n          <div className=\"company-form\">\n            <p>Create New Company</p>\n            <form onSubmit={handleSubmit}>\n              <div>\n                <label>Company Name</label>\n                <input type=\"text\" name=\"company_name\" value={companyData.name} onChange={handleInputChange} />\n              </div>\n              <div>\n                <label>Company Logo</label>\n                <input type=\"file\" name=\"company_logo\" onChange={handleInputChange} />\n                {companyData.logo && <span>Selected file: {companyData.logo}</span>}\n              </div>\n              <div>\n                <label>Company Address</label>\n                <input type=\"text\" name=\"company_address\" value={companyData.address} onChange={handleInputChange} />\n              </div>\n              <div>\n                <label>Company Phone</label>\n                <input type=\"text\" name=\"company_phone\" value={companyData.phone} onChange={handleInputChange} />\n              </div>\n              <div>\n                <label>Company Email</label>\n                <input type=\"text\" name=\"company_email\" value={companyData.email} onChange={handleInputChange} />\n              </div>\n              <div>\n                <label>Company Fax</label>\n                <input type=\"text\" name=\"company_fax\" value={companyData.fax} onChange={handleInputChange} />\n              </div>\n              <div>\n                <label>Company Website</label>\n                <input type=\"text\" name=\"company_website\" value={companyData.website} onChange={handleInputChange} />\n              </div>\n              <div>\n                <label>Company Description</label>\n                <input type=\"text\" name=\"company_description\" value={companyData.description} onChange={handleInputChange} />\n              </div>\n              <div>\n                <label>Company Location</label>\n                <input type=\"text\" name=\"company_location\" value={companyData.location} onChange={handleInputChange} />\n              </div>\n              <div>\n                <input type=\"submit\" value=\"Submit\" />\n              </div>\n            </form>\n          </div>\n          <hr />\n          <div className=\"company-images\">\n            <p>Company Images</p>\n            <form onSubmit={handleImageSubmit}>\n              {Array.from({ length: inputSets }).map((_, index) => (    //uploadedImages.length   inputSets\n                <div key={index} style={{ position: 'relative' }}>\n                  <label>Company Logo</label>\n                  <input\n                    type=\"file\"\n                    name={`company_logo_${index}`}\n                    onChange={(event) => handleFileChange(event, index)}\n                  />\n                  {uploadedImages[index] && (\n                    <img\n                      src={getUrl(uploadedImages[index])}\n                      // src={uploadedImages[index]}\n                      alt=\"Uploaded\"\n                      style={{ position: 'absolute', top: 0, right: 50, width: 50, height: 50 }}\n                    />\n                  )}\n                </div>\n              ))}\n              <div className=\"company-images-btns\">\n                <input type=\"button\" value=\"Add\" onClick={handleAddInputSet} />\n                <input type=\"submit\" value=\"Submit\" />\n              </div>\n            </form>\n          </div>\n          <hr />\n          <div className=\"company-working-time\">\n            <p>WORKING TIME</p>\n            <form onSubmit={handleTimeSubmit}>\n              <table>\n                <thead>\n                  <tr>\n                    <th>Days</th>\n                    <th>Opening</th>\n                    <th>Closing</th>\n                  </tr>\n                </thead>\n                <tbody>\n\n                  {data.map((item, index) => (\n                    <tr key={index}>\n                      <td>{item.day}</td>\n                      <td>\n                        {item.day === 'Closed' ? (\n                          <span>{item.opening}</span>\n                        ) : (\n                          <input\n                            type=\"time\"\n                            value={item.opening}\n                            onChange={(e) => handleTimeChange(index, 'opening', e.target.value)}\n                          />\n                        )}\n                      </td>\n                      <td>\n                        {item.day === 'Closed' ? (\n                          <span>{item.closing}</span>\n                        ) : (\n                          <input\n                            type=\"time\"\n                            value={item.closing}\n                            onChange={(e) => handleTimeChange(index, 'closing', e.target.value)}\n                          />\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n\n                </tbody>\n              </table>\n              <div>\n                <input type=\"submit\" value=\"Submit\" />\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"companycreate-right\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default CreateCompany;\n\n\n\n{/* <div>\n<p>Create New Company</p>\n<form onSubmit={handleSubmit}>\n  <div>\n    <label>Company Name</label>\n    <input type=\"text\" name=\"company_name\" value={companyData.name} onChange={handleInputChange} />\n  </div>\n  <div>\n    <label>Company Logo</label>\n    <input type=\"file\" name=\"company_logo\" onChange={handleInputChange} />\n    {companyData.logo && <span>Selected file: {companyData.logo}</span>}\n  </div>\n  <div>\n    <label>Company Address</label>\n    <input type=\"text\" name=\"company_address\" value={companyData.address} onChange={handleInputChange} />\n  </div>\n  <div>\n    <label>Company Phone</label>\n    <input type=\"text\" name=\"company_phone\" value={companyData.phone} onChange={handleInputChange} />\n  </div>\n  <div>\n    <label>Company Email</label>\n    <input type=\"text\" name=\"company_email\" value={companyData.email} onChange={handleInputChange} />\n  </div>\n  <div>\n    <label>Company Fax</label>\n    <input type=\"text\" name=\"company_fax\" value={companyData.fax} onChange={handleInputChange} />\n  </div>\n  <div>\n    <label>Company Website</label>\n    <input type=\"text\" name=\"company_website\" value={companyData.website} onChange={handleInputChange} />\n  </div>\n  <div>\n    <label>Company Description</label>\n    <input type=\"text\" name=\"company_description\" value={companyData.description} onChange={handleInputChange} />\n  </div>\n  <div>\n    <label>Company Location</label>\n    <input type=\"text\" name=\"company_location\" value={companyData.location} onChange={handleInputChange} />\n  </div>\n  <div>\n    <input type=\"submit\" value=\"Submit\" />\n  </div>\n</form>\n</div>\n<hr />\n<div style={{ position: 'relative' }}>\n<p>Company Images</p>\n<form onSubmit={handleImageSubmit}>\n  {Array.from({ length: inputSets.length }).map((_, index) => (    //uploadedImages.length   inputSets\n    <div key={index} style={{ position: 'relative' }}>\n      <label>Company Logo</label>\n      <input\n        type=\"file\"\n        name={`company_logo_${index}`}\n        onChange={(event) => handleFileChange(event, index)}\n      />\n      {uploadedImages[index] && (\n        <img\n          // src={getUrl(uploadedImages[index])}\n          src={uploadedImages[index]}\n          alt=\"Uploaded\"\n          style={{ position: 'absolute', top: 0, right: 50, width: 50, height: 50 }}\n        />\n      )}\n    </div>\n  ))}\n  <div>\n    <input type=\"submit\" value=\"Submit\" />\n  </div>\n</form>\n\n<button onClick={handleAddInputSet} style={{ position: 'absolute', bottom: '10px', left: '10px' }}>\n  Add\n</button>\n</div>\n<hr />\n<form onSubmit={handleTimeSubmit}>\n<table>\n  <thead>\n    <tr>\n      <th>Days</th>\n      <th>Opening</th>\n      <th>Closing</th>\n    </tr>\n  </thead>\n  <tbody>\n\n    {data.map((item, index) => (\n      <tr key={index}>\n        <td>{item.day}</td>\n        <td>\n          {item.day === 'Closed' ? (\n            <span>{item.opening}</span>\n          ) : (\n            <input\n              type=\"time\"\n              value={item.opening}\n              onChange={(e) => handleTimeChange(index, 'opening', e.target.value)}\n            />\n          )}\n        </td>\n        <td>\n          {item.day === 'Closed' ? (\n            <span>{item.closing}</span>\n          ) : (\n            <input\n              type=\"time\"\n              value={item.closing}\n              onChange={(e) => handleTimeChange(index, 'closing', e.target.value)}\n            />\n          )}\n        </td>\n      </tr>\n    ))}\n\n  </tbody>\n</table>\n<div>\n  <input type=\"submit\" value=\"Submit\" />\n</div>\n</form> */}",[],"/home/saiyad/incpaper/vendorpaper/src/views/SignIn.js",["188","189","190"],[],"import React, { useContext, useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { auth } from '../firebase';\nimport { AuthContext } from '../Auth';\nimport { useDispatch } from 'react-redux';\nimport { setUser } from '../store/reducers/userSlice';\n\nfunction SignIn() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const { currentUser, setCurrentUser, loading } = useContext(AuthContext);\n\n  // const handleLogout = () => {\n  //   auth.signOut()\n  //     .then(() => {\n  //       setCurrentUser(null);\n  //       console.log('Logged out');\n  //     })\n  //     .catch((error) => {\n  //       console.log(`Logout failed: ${error.message}`);\n  //     });\n  // };\n  const handleRedirect = () => {\n    if (currentUser) {\n      navigate('/');\n    // handleLogout();\n    }\n  };\n\n  useEffect(() => {\n    handleRedirect();\n  }, [currentUser]); // re-run the effect when currentUser changes\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    auth.signInWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user.multiFactor.user;\n        dispatch(setUser({\n          uid: user.uid,\n          displayName: user.displayName,\n          email: user.email,\n          emailVerified: user.emailVerified,\n          metadata: user.metadata,\n          phoneNumber: user.phoneNumber,\n          providerData: user.providerData,\n          providerId: user.providerId,\n          stsTokenManager: user.stsTokenManager,\n          uid: user.uid\n        }));\n        setCurrentUser(user);\n        setEmail('');\n        setPassword('');\n        setError(null);\n        console.log('Signed in', user.multiFactor.user);\n        navigate('/');\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(`Sign in failed: ${errorCode} - ${errorMessage}`);\n        setError(errorMessage);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Sign in</h1>\n      {error && <div>{error}</div>}\n      <form onSubmit={handleSubmit}>\n        <label>\n          Email:\n          <input type=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} />\n        </label>\n        <br />\n        <button type=\"submit\">Sign in</button>\n      </form>\n      <p>\n      <Link to=\"/forgotpassword\">Forgot password?</Link>\n      </p>\n      <p>\n        Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n      </p>\n    </div>\n  );\n}\n\nexport default SignIn;\n","/home/saiyad/incpaper/vendorpaper/src/views/CreateProduct.js",["191","192"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./CreateProduct.css\";\nimport NavBar from \"../components/NavBar\";\n\nconst api = axios.create({\n    baseURL: 'http://localhost:8000',\n});\n\nfunction CreateProduct() {\n    const [inputSets, setInputSets] = useState(1);\n    const [inputFields, setInputFields] = useState([{ feature_key: '', feature_value: '' }]);\n    const [uploadedImages, setUploadedImages] = useState([]);\n    const [productData, setProductData] = useState({\n        id: '',\n        product_name: '',\n        product_description: '',\n        price: '',\n        unit: '',\n        video_url: '',\n        tags: '',\n    });\n\n    const handleInputChange = (event) => {\n        const { name, value, type } = event.target;\n        const newValue = type === 'file' ? event.target.files[0] : value;\n        setProductData((prevFormData) => ({\n            ...prevFormData,\n            [name]: newValue,\n        }));\n    };\n\n    function getCookie(name) {\n        const cookieValue = document.cookie.match('(^|;)\\\\s*' + name + '\\\\s*=\\\\s*([^;]+)');\n        return cookieValue ? cookieValue.pop() : '';\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const formData = new FormData(event.target);\n\n        formData.append('product_name', event.target.product_name.value);\n        formData.append('product_description', event.target.product_description.value);\n        formData.append('price', event.target.price.value);\n        formData.append('unit', event.target.unit.value);\n        formData.append('video_url', event.target.video_url.value);\n        formData.append('tags', event.target.tags.value);\n\n        const csrftoken = getCookie('csrftoken');\n        console.log(csrftoken)\n        formData.append('csrfmiddlewaretoken', csrftoken);\n\n        // Access form data using formData.get('field_name')\n        // Perform actions with the form data, e.g., make an API request\n\n        try {\n            const response = await api.post('/product/product/', formData, {\n                headers: {\n                    'X-CSRFToken': csrftoken,\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n\n            // Handle the response here\n            console.log(response);\n        } catch (error) {\n            // Handle errors here\n            console.error(error);\n        }\n    }\n\n    const handleImageSubmit = async (event) => {\n        event.preventDefault();\n        // Handle form submission logic here\n        try {\n            await Promise.all(\n                uploadedImages.map(async (image) => {\n                    await uploadImage(image, 3);\n                })\n            );\n\n            // Handle successful form submission here\n            console.log('All images uploaded successfully!');\n        } catch (error) {\n            console.error('Error uploading images', error);\n        }\n    };\n\n    const uploadImage = async (file, product_id) => {\n        const csrftoken = getCookie('csrftoken');\n        try {\n\n            const formData = new FormData();\n            formData.append('image', file); // Make sure the file is appended with the correct key 'image'\n            formData.append('product', product_id); // Make sure the company_id is appended with the correct key 'company'\n\n            const response = await api.post('/product/images/', formData, {\n                headers: {\n                    'X-CSRFToken': csrftoken,\n                    'Content-Type': 'multipart/form-data', // Ensure Content-Type is set correctly\n                },\n            });\n\n            if (response.status === 200) {\n                // Image uploaded successfully\n                console.log('Image uploaded successfully!');\n            } else {\n                // Handle upload failure\n                console.error('Failed to upload image');\n            }\n        } catch (error) {\n            console.error('Error uploading image', error);\n        }\n    };\n\n\n    const handleAddInputSet = () => {\n        setInputSets((prevInputSets) => prevInputSets + 1);\n    };\n    const getUrl = (file) => {\n        return file.image || URL.createObjectURL(file);\n    }\n    const handleFileChange = (event, index) => {\n        const file = event.target.files[0];\n        // const imageUrl = URL.createObjectURL(file); // Create a temporary URL for the selected image file\n        setUploadedImages((prevImages) => {\n            const newImages = [...prevImages];\n            newImages[index] = file; // Use the URL as the src for the image\n            return newImages;\n        });\n    };\n\n    const handleFeatureChange = (index, field, value) => {\n        const values = [...inputFields];\n        values[index][field] = value;\n        setInputFields(values);\n    };\n\n    const handleFeatureAddFields = () => {\n        const values = [...inputFields];\n        values.push({ text1: '', text2: '' });\n        setInputFields(values);\n    };\n\n    const handleFeatureSubmit = async(event) => {\n        event.preventDefault();\n        console.log(inputFields);\n        // You can perform further actions like sending the data to an API here\n        try {\n            await Promise.all(\n                inputFields.map(async (inputField) => {\n                    await SubmitFeature(inputField, 3);\n                })\n            );\n\n            // Handle successful form submission here\n            console.log('All images uploaded successfully!');\n        } catch (error) {\n            console.error('Error uploading images', error);\n        }\n    };\n    const SubmitFeature = async (inputField, product_id) => {\n        const csrftoken = getCookie('csrftoken');\n        try {\n\n            const formData = new FormData();\n            formData.append('feature_key', inputField['feature_key']); \n            formData.append('feature_value', inputField['feature_value']);\n            formData.append('product', product_id); \n\n            const response = await api.post('/product/feature/', formData, {\n                headers: {\n                    'X-CSRFToken': csrftoken,\n                    'Content-Type': 'multipart/form-data', // Ensure Content-Type is set correctly\n                },\n            });\n\n            if (response.status === 200) {\n                // Image uploaded successfully\n                console.log('Feature saved successfully!');\n            } else {\n                // Handle upload failure\n                console.error('Failed to save Features');\n            }\n        } catch (error) {\n            console.error('Error uploading image', error);\n        }\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n          try {\n            const response1 = await api.get('/product/product/3/');\n            const productDataFromApi = response1.data;\n            setProductData(productDataFromApi);\n            console.log(productDataFromApi)\n           \n            const response2 = await api.get('/product/images/');\n            setUploadedImages(response2.data);\n            console.log(response2.data)\n    \n          \n            const response3 = await api.get('/product/feature/');\n            setInputFields(response3.data);\n            // console.log(response3)\n          } catch (error) {\n            // Handle errors if necessary\n            console.error('Error fetching data:', error);\n          }\n        };\n    \n        fetchData();\n      }, []);\n\n      \n\n    return (\n        <>\n            <NavBar />\n            <div className='companyproduct-container'>\n                <div className=\"companyproduct-left\"></div>\n                <div className=\"companyproduct-body\">\n                    <div className=\"product-form\">\n                        <p>Create New Product</p>\n                        <form onSubmit={handleSubmit}>\n                            <div>\n                                <label>Name</label>\n                                <input type=\"text\" name=\"product_name\" value={productData.product_name} onChange={handleInputChange} />\n                            </div>\n                            <div>\n                                <label>Description</label>\n                                <input type=\"text\" name=\"product_description\" value={productData.product_description} onChange={handleInputChange} />\n                            </div>\n                            <div>\n                                <label>Price</label>\n                                <input type=\"text\" name=\"price\" value={productData.price} onChange={handleInputChange} />\n                            </div>\n                            <div>\n                                <label>Unit</label>\n                                <input type=\"text\" name=\"unit\" value={productData.unit} onChange={handleInputChange} />\n                            </div>\n\n                            <div>\n                                <label>Video</label>\n                                <input type=\"text\" name=\"video_url\" value={productData.video_url} onChange={handleInputChange} />\n                            </div>\n                            <div>\n                                <label>Tags</label>\n                                <input type=\"text\" name=\"tags\" value={productData.tags} onChange={handleInputChange} />\n                            </div>\n\n                            <div>\n                                <input type=\"submit\" value=\"Submit\" />\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"product-images\">\n                        <p>Product Images</p>\n                        <form onSubmit={handleImageSubmit}>\n                            {Array.from({ length: inputSets }).map((_, index) => (    //uploadedImages.length   inputSets\n                                <div key={index} style={{ position: 'relative' }}>\n                                    <label>Product Image</label>\n                                    <input\n                                        type=\"file\"\n                                        name={`company_logo_${index}`}\n                                        onChange={(event) => handleFileChange(event, index)}\n                                    />\n                                    {/* {uploadedImages && <span>Selected file: {uploadedImages[index].image}</span>} */}\n                                    {uploadedImages[index] && (\n                                        <img\n                                            src={getUrl(uploadedImages[index])}\n                                            // src={uploadedImages[index]}\n                                            alt=\"Uploaded\"\n                                            style={{ position: 'absolute', top: 0, right: 50, width: 50, height: 50 }}\n                                        />\n                                    )}\n                                </div>\n                            ))}\n                            <div className=\"product-images-btns\">\n                                <input type=\"button\" value=\"Add\" onClick={handleAddInputSet} />\n                                <input type=\"submit\" value=\"Submit\" />\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"product-features\">\n                    <p>Product Features</p>\n                        <form onSubmit={handleFeatureSubmit}>\n                            {inputFields.map((inputField, index) => (\n                                <div key={index} className=\"feature-fields\">\n                                    <input\n                                        type=\"text\"\n                                        value={inputField.feature_key}\n                                        onChange={(e) => handleFeatureChange(index, 'key', e.target.value)}\n                                        placeholder=\"Key\"\n                                        style={{ width: '45%' }} // Adjust the width as needed\n                                    />\n                                    <input\n                                        type=\"text\"\n                                        value={inputField.feature_value}\n                                        onChange={(e) => handleFeatureChange(index, 'value', e.target.value)}\n                                        placeholder=\"Value\"\n                                        style={{ width: '45%' }} // Adjust the width as needed\n                                    />\n                                </div>\n                            ))}\n                            <div className=\"product-images-btns\">\n                                <input type=\"button\" value=\"Add\" onClick={handleFeatureAddFields} />\n                                <input type=\"submit\" value=\"Submit\" />\n                            </div>\n                         \n                        </form>\n                    </div>\n                </div>\n                <div className=\"companyproduct-right\"></div>\n            </div>\n            </>\n    );\n}\n\nexport default CreateProduct;\n\n\n{/* <div>\n<p>Create New Product</p>\n<form onSubmit={handleSubmit}>\n    <div>\n        <label>Name</label>\n        <input type=\"text\" name=\"product_name\" value={productData.product_name} onChange={handleInputChange} />\n    </div>\n    <div>\n        <label>Description</label>\n        <input type=\"text\" name=\"product_description\" value={productData.product_description} onChange={handleInputChange} />\n    </div>\n    <div>\n        <label>Price</label>\n        <input type=\"text\" name=\"price\" value={productData.price} onChange={handleInputChange} />\n    </div>\n    <div>\n        <label>Unit</label>\n        <input type=\"text\" name=\"unit\" value={productData.unit} onChange={handleInputChange} />\n    </div>\n\n    <div>\n        <label>Video</label>\n        <input type=\"text\" name=\"video_url\" value={productData.video_url} onChange={handleInputChange} />\n    </div>\n    <div>\n        <label>Tags</label>\n        <input type=\"text\" name=\"tags\" value={productData.tags} onChange={handleInputChange} />\n    </div>\n\n    <div>\n        <input type=\"submit\" value=\"Submit\" />\n    </div>\n</form>\n</div>\n<hr />\n<div style={{ position: 'relative' }}>\n<p>Product Images</p>\n<form onSubmit={handleImageSubmit}>\n    {Array.from({ length: inputSets }).map((_, index) => (    //uploadedImages.length   inputSets\n        <div key={index} style={{ position: 'relative' }}>\n            <label>Product Image</label>\n            <input\n                type=\"file\"\n                name={`company_logo_${index}`}\n                onChange={(event) => handleFileChange(event, index)}\n            />\n            {/* {uploadedImages && <span>Selected file: {uploadedImages[index].image}</span>}\n            {uploadedImages[index] && (\n                <img\n                    // src={getUrl(uploadedImages[index])}\n                    src={uploadedImages[index]}\n                    alt=\"Uploaded\"\n                    style={{ position: 'absolute', top: 0, right: 50, width: 50, height: 50 }}\n                />\n            )} */}\n//         </div>\n//     ))}\n//     <div>\n//         <input type=\"submit\" value=\"Submit\" />\n//     </div>\n// </form>\n\n{/* <button onClick={handleAddInputSet} style={{ position: 'absolute', bottom: '10px', left: '10px' }}>\n    Add\n</button>\n</div>\n<hr />\n<div>\n<form onSubmit={handleFeatureSubmit}>\n    {inputFields.map((inputField, index) => (\n        <div key={index}>\n            <input\n                type=\"text\"\n                value={inputField.feature_key}\n                onChange={(e) => handleFeatureChange(index, 'key', e.target.value)}\n                placeholder=\"Key 1\"\n            />\n            <input\n                type=\"text\"\n                value={inputField.feature_value}\n                onChange={(e) => handleFeatureChange(index, 'value', e.target.value)}\n                placeholder=\"Value 2\"\n            />\n        </div>\n    ))}\n    <button type=\"button\" onClick={handleFeatureAddFields}>\n        Add More\n    </button>\n    <button type=\"submit\">Submit</button>\n</form>\n</div> */}","/home/saiyad/incpaper/vendorpaper/src/views/ShowPage.js",["193","194","195","196","197","198","199"],[],"/home/saiyad/incpaper/vendorpaper/src/views/ChatPage.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/views/Product.js",["200","201","202"],[],"/home/saiyad/incpaper/vendorpaper/src/views/SearchPage.js",["203","204","205","206","207","208"],[],"/home/saiyad/incpaper/vendorpaper/src/views/ChatInput.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/views/MessageList.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/views/Message.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/store/reducers/userSlice.js",["209","210"],[],"// userSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    uid: null,\n    displayName: '',\n    email: '',\n    emailVerified: '',\n    metadata: [],\n    phoneNumber: '',\n    providerData:[],\n    providerId:'',\n    stsTokenManager: [],\n    uid: []\n  },\n  reducers: {\n    setUser: (state, action) => {\n        // Save data to sessionStorage\n        sessionStorage.setItem('userData', JSON.stringify(action.payload));\n      // Update user data when a user signs in or updates their profile\n      return { ...state, ...action.payload };\n    },\n    clearUser: (state) => {\n      // Clear user data when the user signs out\n      sessionStorage.removeItem('userData');\n        return {\n            uid: null,\n            displayName: '',\n            email: '',\n            emailVerified: '',\n            metadata: [],\n            phoneNumber: '',\n            providerData: [],\n            providerId: '',\n            stsTokenManager: [],\n            uid: []\n        };\n    },\n  },\n});\n\nexport const { setUser, clearUser } = userSlice.actions;\nexport default userSlice.reducer;\n","/home/saiyad/incpaper/vendorpaper/src/store/store.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/store/rootReducer.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/components/NavBar.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/components/Logo.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/components/SearchBar.js",["211"],[],"/home/saiyad/incpaper/vendorpaper/src/components/CreateButton.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/components/Notification.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/components/UserAccount.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/components/HomePage.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/components/HomePageTile.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/components/ListItem.js",["212"],[],"/home/saiyad/incpaper/vendorpaper/src/components/CategoryList.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/components/RegionList.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/components/ProductTile.js",[],[],"/home/saiyad/incpaper/vendorpaper/src/components/ProductImageViewer.js",["213","214","215","216"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./ProductImageViewer.css\";\nimport pic from \"../assets/brand.jpg\";\nimport logo1 from \"../assets/logo1.png\"\nimport logo2 from \"../assets/logo2.png\"\n\nfunction ProductImageViewer(props) {\n    const [image,setImage]=useState(pic);\n    const ChangePic=(e)=>{\n        const image=e.target.getAttribute('src');\n        setImage(image)\n        const galleryImages = document.querySelectorAll('.image-viewer-gallary img');\n        galleryImages.forEach((img) => {\n            img.style.border = '1px solid #000'; // Reset to black border\n        });\n        e.target.style.border = '1px solid rgb(245, 4, 4)';\n    }\n\n    const getProductImage = (img) => {\n        \n        if (img) {\n            return `http://localhost:8000${img}`\n        }\n        return pic;\n    }\n\n    useEffect(() => {\n        if (props.images && props.images.length > 0) {\n            const firstImage = props.images[0];\n            if (firstImage && firstImage.image) {\n              const imageUrl = firstImage.image;\n              setImage(imageUrl)\n            } else {\n              // Handle the case where 'image' property is missing\n            }\n          } else {\n            // Handle the case where 'props.images' is undefined or an empty array\n          }\n      }, []); // \n    return (\n    <div className=\"image-viewer-container\">\n        <div className=\"image-viewer-pic\">\n            <img src={getProductImage(image)} alt=\"product-image\"  />\n        </div>\n        <div className=\"image-viewer-gallary\">\n                {props.images?.map(image => (\n                    <div key={image.id}>\n                        <img src={getProductImage(image.image)} alt={image.product_name} onClick={(e)=>ChangePic(e)}/>\n                    </div>\n                ))}\n            {/* <img src={logo1} alt=\"\" onClick={(e)=>ChangePic(e)}/>\n            <img src={pic} alt=\"\" onClick={(e)=>ChangePic(e)}/> */}\n        </div>\n    </div> );\n}\n\nexport default ProductImageViewer;",{"ruleId":"217","severity":1,"message":"218","line":2,"column":10,"nodeType":"219","messageId":"220","endLine":2,"endColumn":14},{"ruleId":"217","severity":1,"message":"221","line":15,"column":9,"nodeType":"219","messageId":"220","endLine":15,"endColumn":13},{"ruleId":"217","severity":1,"message":"222","line":16,"column":11,"nodeType":"219","messageId":"220","endLine":16,"endColumn":22},{"ruleId":"217","severity":1,"message":"223","line":18,"column":9,"nodeType":"219","messageId":"220","endLine":18,"endColumn":22},{"ruleId":"217","severity":1,"message":"224","line":28,"column":9,"nodeType":"219","messageId":"220","endLine":28,"endColumn":18},{"ruleId":"217","severity":1,"message":"225","line":49,"column":9,"nodeType":"219","messageId":"220","endLine":49,"endColumn":19},{"ruleId":"226","severity":1,"message":"227","line":364,"column":1,"nodeType":"228","messageId":"229","endLine":485,"endColumn":12},{"ruleId":"217","severity":1,"message":"230","line":14,"column":40,"nodeType":"219","messageId":"220","endLine":14,"endColumn":47},{"ruleId":"231","severity":1,"message":"232","line":35,"column":6,"nodeType":"233","endLine":35,"endColumn":19,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":54,"column":11,"nodeType":"237","messageId":"238","endLine":54,"endColumn":14},{"ruleId":"226","severity":1,"message":"227","line":324,"column":1,"nodeType":"228","messageId":"229","endLine":378,"endColumn":19},{"ruleId":"226","severity":1,"message":"227","line":386,"column":1,"nodeType":"228","messageId":"229","endLine":414,"endColumn":11},{"ruleId":"217","severity":1,"message":"218","line":3,"column":10,"nodeType":"219","messageId":"220","endLine":3,"endColumn":14},{"ruleId":"217","severity":1,"message":"239","line":9,"column":10,"nodeType":"219","messageId":"220","endLine":9,"endColumn":16},{"ruleId":"217","severity":1,"message":"240","line":19,"column":11,"nodeType":"219","messageId":"220","endLine":19,"endColumn":21},{"ruleId":"217","severity":1,"message":"241","line":20,"column":12,"nodeType":"219","messageId":"220","endLine":20,"endColumn":23},{"ruleId":"217","severity":1,"message":"242","line":38,"column":14,"nodeType":"219","messageId":"220","endLine":38,"endColumn":35},{"ruleId":"217","severity":1,"message":"243","line":58,"column":11,"nodeType":"219","messageId":"220","endLine":58,"endColumn":26},{"ruleId":"226","severity":1,"message":"227","line":205,"column":1,"nodeType":"228","messageId":"229","endLine":304,"endColumn":19},{"ruleId":"231","severity":1,"message":"244","line":35,"column":8,"nodeType":"233","endLine":35,"endColumn":10,"suggestions":"245"},{"ruleId":"217","severity":1,"message":"243","line":37,"column":11,"nodeType":"219","messageId":"220","endLine":37,"endColumn":26},{"ruleId":"226","severity":1,"message":"227","line":111,"column":1,"nodeType":"228","messageId":"229","endLine":147,"endColumn":11},{"ruleId":"217","severity":1,"message":"218","line":4,"column":10,"nodeType":"219","messageId":"220","endLine":4,"endColumn":14},{"ruleId":"217","severity":1,"message":"246","line":5,"column":8,"nodeType":"219","messageId":"220","endLine":5,"endColumn":11},{"ruleId":"217","severity":1,"message":"247","line":6,"column":8,"nodeType":"219","messageId":"220","endLine":6,"endColumn":19},{"ruleId":"217","severity":1,"message":"248","line":7,"column":8,"nodeType":"219","messageId":"220","endLine":7,"endColumn":16},{"ruleId":"217","severity":1,"message":"249","line":8,"column":8,"nodeType":"219","messageId":"220","endLine":8,"endColumn":22},{"ruleId":"226","severity":1,"message":"227","line":164,"column":1,"nodeType":"228","messageId":"229","endLine":294,"endColumn":11},{"ruleId":"235","severity":1,"message":"236","line":16,"column":5,"nodeType":"237","messageId":"238","endLine":16,"endColumn":8},{"ruleId":"235","severity":1,"message":"236","line":38,"column":13,"nodeType":"237","messageId":"238","endLine":38,"endColumn":16},{"ruleId":"250","severity":1,"message":"251","line":9,"column":16,"nodeType":"252","messageId":"238","endLine":9,"endColumn":18},{"ruleId":"217","severity":1,"message":"253","line":5,"column":18,"nodeType":"219","messageId":"220","endLine":5,"endColumn":25},{"ruleId":"217","severity":1,"message":"254","line":4,"column":8,"nodeType":"219","messageId":"220","endLine":4,"endColumn":13},{"ruleId":"217","severity":1,"message":"255","line":5,"column":8,"nodeType":"219","messageId":"220","endLine":5,"endColumn":13},{"ruleId":"231","severity":1,"message":"256","line":39,"column":10,"nodeType":"233","endLine":39,"endColumn":12,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":43,"column":13,"nodeType":"260","endLine":43,"endColumn":70},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'handleSignOut' is assigned a value but never used.","'companies' is assigned a value but never used.","'storedData' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleRedirect'. Either include it or remove the dependency array.","ArrayExpression",["261"],"no-dupe-keys","Duplicate key 'uid'.","ObjectExpression","unexpected","'Button' is defined but never used.","'daysOfWeek' is assigned a value but never used.","'companyInfo' is assigned a value but never used.","'capitalizeFirstLetter' is defined but never used.","'getProductImage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array.",["262"],"'pic' is defined but never used.","'ButtonGroup' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'setData' is assigned a value but never used.","'logo1' is defined but never used.","'logo2' is defined but never used.","React Hook useEffect has a missing dependency: 'props.images'. Either include it or remove the dependency array.",["263"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},"Update the dependencies array to be: [currentUser, handleRedirect]",{"range":"270","text":"271"},"Update the dependencies array to be: [product]",{"range":"272","text":"273"},"Update the dependencies array to be: [props.images]",{"range":"274","text":"275"},[1021,1034],"[currentUser, handleRedirect]",[934,936],"[product]",[1302,1304],"[props.images]"]