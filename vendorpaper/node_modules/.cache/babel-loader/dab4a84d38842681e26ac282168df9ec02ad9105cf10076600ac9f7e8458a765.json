{"ast":null,"code":"// userSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    uid: null,\n    displayName: '',\n    email: '',\n    emailVerified: '',\n    metadata: [],\n    phoneNumber: '',\n    providerData: [],\n    providerId: '',\n    stsTokenManager: [],\n    uid: []\n  },\n  reducers: {\n    setUser: (state, action) => {\n      // Update user data when a user signs in or updates their profile\n      return {\n        ...state,\n        ...action.payload\n      };\n      // Save data to sessionStorage\n      sessionStorage.setItem('myData', JSON.stringify(action.payload));\n    },\n    clearUser: state => {\n      // Clear user data when the user signs out\n      return {\n        uid: null,\n        displayName: '',\n        email: '',\n        emailVerified: '',\n        metadata: [],\n        phoneNumber: '',\n        providerData: [],\n        providerId: '',\n        stsTokenManager: [],\n        uid: []\n      };\n    }\n  }\n});\nexport const {\n  setUser,\n  clearUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","userSlice","name","initialState","uid","displayName","email","emailVerified","metadata","phoneNumber","providerData","providerId","stsTokenManager","reducers","setUser","state","action","payload","sessionStorage","setItem","JSON","stringify","clearUser","actions","reducer"],"sources":["/home/saiyad/incpaper/vendorpaper/src/store/reducers/userSlice.js"],"sourcesContent":["// userSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    uid: null,\n    displayName: '',\n    email: '',\n    emailVerified: '',\n    metadata: [],\n    phoneNumber: '',\n    providerData:[],\n    providerId:'',\n    stsTokenManager: [],\n    uid: []\n  },\n  reducers: {\n    setUser: (state, action) => {\n      // Update user data when a user signs in or updates their profile\n      return { ...state, ...action.payload };\n      // Save data to sessionStorage\n      sessionStorage.setItem('myData', JSON.stringify(action.payload));\n    },\n    clearUser: (state) => {\n      // Clear user data when the user signs out\n        return {\n            uid: null,\n            displayName: '',\n            email: '',\n            emailVerified: '',\n            metadata: [],\n            phoneNumber: '',\n            providerData: [],\n            providerId: '',\n            stsTokenManager: [],\n            uid: []\n        };\n    },\n  },\n});\n\nexport const { setUser, clearUser } = userSlice.actions;\nexport default userSlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,GAAG,EAAE,IAAI;IACTC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAC,EAAE;IACfC,UAAU,EAAC,EAAE;IACbC,eAAe,EAAE,EAAE;IACnBR,GAAG,EAAE;EACP,CAAC;EACDS,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B;MACA,OAAO;QAAE,GAAGD,KAAK;QAAE,GAAGC,MAAM,CAACC;MAAQ,CAAC;MACtC;MACAC,cAAc,CAACC,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAACC,OAAO,CAAC,CAAC;IAClE,CAAC;IACDK,SAAS,EAAGP,KAAK,IAAK;MACpB;MACE,OAAO;QACHX,GAAG,EAAE,IAAI;QACTC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE,EAAE;QACTC,aAAa,EAAE,EAAE;QACjBC,QAAQ,EAAE,EAAE;QACZC,WAAW,EAAE,EAAE;QACfC,YAAY,EAAE,EAAE;QAChBC,UAAU,EAAE,EAAE;QACdC,eAAe,EAAE,EAAE;QACnBR,GAAG,EAAE;MACT,CAAC;IACL;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEU,OAAO;EAAEQ;AAAU,CAAC,GAAGrB,SAAS,CAACsB,OAAO;AACvD,eAAetB,SAAS,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}