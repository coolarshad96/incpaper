{"ast":null,"code":"var _jsxFileName = \"/home/saiyad/incpaper/vendorpaper/src/components/CreateCompany.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  baseURL: 'http://localhost:8000'\n});\nfunction CreateCompany() {\n  _s();\n  const [inputSets, setInputSets] = useState(1);\n  const [uploadedImages, setUploadedImages] = useState([]);\n  function getCookie(name) {\n    const cookieValue = document.cookie.match('(^|;)\\\\s*' + name + '\\\\s*=\\\\s*([^;]+)');\n    return cookieValue ? cookieValue.pop() : '';\n  }\n\n  // const handleSubmit = async (event) => {\n  //     event.preventDefault();\n\n  //     const formData = new FormData(event.target);\n  //     console.log(event.target.company_logo.files[0])\n  //     formData.append('name', event.target.company_name.value);\n  //     formData.append('logo', event.target.company_logo.files[0]);\n  //     formData.append('address', event.target.company_address.value);\n  //     formData.append('phone', event.target.company_phone.value);\n  //     formData.append('email', event.target.company_email.value);\n  //     formData.append('fax', event.target.company_fax.value);\n  //     formData.append('website', event.target.company_website.value);\n  //     formData.append('description', event.target.company_description.value);\n  //     formData.append('location', event.target.company_location.value);\n\n  //     const csrftoken = getCookie('csrftoken');\n  //     console.log(csrftoken)\n  //     formData.append('csrfmiddlewaretoken', csrftoken);\n\n  //     // Access form data using formData.get('field_name')\n  //     // Perform actions with the form data, e.g., make an API request\n\n  //     try {\n  //         const response = await api.post('http://localhost:8000/company/company/', formData, {\n  //           headers: {\n  //             'X-CSRFToken': csrftoken,\n  //             'Content-Type': 'multipart/form-data',\n  //           },\n  //         });\n\n  //         // Handle the response here\n  //         console.log(response);\n  //       } catch (error) {\n  //         // Handle errors here\n  //         console.error(error);\n  //       }\n  //   };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Handle form submission logic here\n    try {\n      await Promise.all(uploadedImages.map(async image => {\n        console.log(\"------------\", image);\n        await uploadImage(image, 20);\n      }));\n\n      // Handle successful form submission here\n      console.log('All images uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading images', error);\n    }\n  };\n  const uploadImage = async (file, company_id) => {\n    const csrftoken = getCookie('csrftoken');\n    try {\n      const formData = new FormData();\n      formData.append('image', file);\n      formData.append('company', company_id);\n      const response = await api.post('/company/images/', formData, {\n        headers: {\n          'X-CSRFToken': csrftoken,\n          // If required for CSRF protection\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.status === 200) {\n        // Image uploaded successfully\n        console.log('Image uploaded successfully!');\n      } else {\n        // Handle upload failure\n        console.error('Failed to upload image');\n      }\n    } catch (error) {\n      console.error('Error uploading image', error);\n    }\n  };\n  const handleAddInputSet = () => {\n    setInputSets(prevInputSets => prevInputSets + 1);\n  };\n  const handleFileChange = (event, index) => {\n    const file = event.target.files[0];\n    setUploadedImages(prevImages => {\n      const newImages = [...prevImages];\n      newImages[index] = file;\n      return newImages;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Company Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleImageSubmit,\n        children: [Array.from({\n          length: inputSets\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Company Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: `company_logo_${index}`,\n            onChange: event => handleFileChange(event, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this), uploadedImages[index] && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: uploadedImages[index],\n            alt: \"Uploaded\",\n            style: {\n              position: 'absolute',\n              top: 0,\n              right: 50,\n              width: 50,\n              height: 50\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddInputSet,\n        style: {\n          position: 'absolute',\n          bottom: '10px',\n          left: '10px'\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(CreateCompany, \"t+MnHDp34QALeFOh+H56gOHMo4o=\");\n_c = CreateCompany;\nexport default CreateCompany;\nvar _c;\n$RefreshReg$(_c, \"CreateCompany\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","api","create","baseURL","CreateCompany","_s","inputSets","setInputSets","uploadedImages","setUploadedImages","getCookie","name","cookieValue","document","cookie","match","pop","handleSubmit","event","preventDefault","Promise","all","map","image","console","log","uploadImage","error","file","company_id","csrftoken","formData","FormData","append","response","post","headers","status","handleAddInputSet","prevInputSets","handleFileChange","index","target","files","prevImages","newImages","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","onSubmit","handleImageSubmit","Array","from","length","_","type","onChange","src","alt","top","right","width","height","value","onClick","bottom","left","_c","$RefreshReg$"],"sources":["/home/saiyad/incpaper/vendorpaper/src/components/CreateCompany.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8000',\n});\n\nfunction CreateCompany() {\n    const [inputSets, setInputSets] = useState(1);\n    const [uploadedImages, setUploadedImages] = useState([]);\n  \n\n    function getCookie(name) {\n        const cookieValue = document.cookie.match('(^|;)\\\\s*' + name + '\\\\s*=\\\\s*([^;]+)');\n        return cookieValue ? cookieValue.pop() : '';\n      }\n\n    // const handleSubmit = async (event) => {\n    //     event.preventDefault();\n        \n    //     const formData = new FormData(event.target);\n    //     console.log(event.target.company_logo.files[0])\n    //     formData.append('name', event.target.company_name.value);\n    //     formData.append('logo', event.target.company_logo.files[0]);\n    //     formData.append('address', event.target.company_address.value);\n    //     formData.append('phone', event.target.company_phone.value);\n    //     formData.append('email', event.target.company_email.value);\n    //     formData.append('fax', event.target.company_fax.value);\n    //     formData.append('website', event.target.company_website.value);\n    //     formData.append('description', event.target.company_description.value);\n    //     formData.append('location', event.target.company_location.value);\n\n    //     const csrftoken = getCookie('csrftoken');\n    //     console.log(csrftoken)\n    //     formData.append('csrfmiddlewaretoken', csrftoken);\n\n    //     // Access form data using formData.get('field_name')\n    //     // Perform actions with the form data, e.g., make an API request\n\n    //     try {\n    //         const response = await api.post('http://localhost:8000/company/company/', formData, {\n    //           headers: {\n    //             'X-CSRFToken': csrftoken,\n    //             'Content-Type': 'multipart/form-data',\n    //           },\n    //         });\n        \n    //         // Handle the response here\n    //         console.log(response);\n    //       } catch (error) {\n    //         // Handle errors here\n    //         console.error(error);\n    //       }\n    //   };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        // Handle form submission logic here\n        try {\n            await Promise.all(\n              uploadedImages.map(async (image) => {\n                console.log(\"------------\",image)\n                await uploadImage(image,20);\n              })\n            );\n      \n            // Handle successful form submission here\n            console.log('All images uploaded successfully!');\n          } catch (error) {\n            console.error('Error uploading images', error);\n          }\n      };\n\n    const uploadImage = async (file, company_id) => {\n        const csrftoken = getCookie('csrftoken');\n        try {\n            const formData = new FormData();\n            formData.append('image', file);\n            formData.append('company', company_id);\n            const response = await api.post('/company/images/', formData, {\n                headers: {\n                    'X-CSRFToken': csrftoken, // If required for CSRF protection\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n\n            if (response.status === 200) {\n                // Image uploaded successfully\n                console.log('Image uploaded successfully!');\n            } else {\n                // Handle upload failure\n                console.error('Failed to upload image');\n            }\n        } catch (error) {\n            console.error('Error uploading image', error);\n        }\n    };\n\n\n      const handleAddInputSet = () => {\n        setInputSets((prevInputSets) => prevInputSets + 1);\n      };\n\n    const handleFileChange = (event, index) => {\n        const file = event.target.files[0];\n\n        setUploadedImages((prevImages) => {\n            const newImages = [...prevImages];\n            newImages[index] = file;\n            return newImages;\n        });\n    };\n\n    return (\n        <>\n        {/* <div>\n            <p>Create New Company</p>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Company Name</label>\n                    <input type=\"text\" name=\"company_name\" />\n                </div>\n                <div>\n                    <label>Company Logo</label>\n                    <input type=\"file\" name=\"company_logo\" />\n                </div>\n                <div>\n                    <label>Company Address</label>\n                    <input type=\"text\" name=\"company_address\" />\n                </div>\n                <div>\n                    <label>Company Phone</label>\n                    <input type=\"text\" name=\"company_phone\" />\n                </div>\n                <div>\n                    <label>Company Email</label>\n                    <input type=\"text\" name=\"company_email\" />\n                </div>\n                <div>\n                    <label>Company Fax</label>\n                    <input type=\"text\" name=\"company_fax\" />\n                </div>\n                <div>\n                    <label>Company Website</label>\n                    <input type=\"text\" name=\"company_website\" />\n                </div>\n                <div>\n                    <label>Company Description</label>\n                    <input type=\"text\" name=\"company_description\" />\n                </div>\n                <div>\n                    <label>Company Location</label>\n                    <input type=\"text\" name=\"company_location\" />\n                </div>\n                <div>\n                    <input type=\"submit\" value=\"Submit\" />\n                </div>\n            </form>\n        </div> */}\n        <hr />\n            <div style={{ position: 'relative' }}>\n                <p>Company Images</p>\n                <form onSubmit={handleImageSubmit}>\n                    {Array.from({ length: inputSets }).map((_, index) => (\n                        <div key={index} style={{ position: 'relative' }}>\n                            <label>Company Logo</label>\n                            <input\n                                type=\"file\"\n                                name={`company_logo_${index}`}\n                                onChange={(event) => handleFileChange(event, index)}\n                            />\n                            {uploadedImages[index] && (\n                                <img\n                                    src={uploadedImages[index]}\n                                    alt=\"Uploaded\"\n                                    style={{ position: 'absolute', top: 0, right: 50, width: 50, height: 50 }}\n                                />\n                            )}\n                        </div>\n                    ))}\n                    <div>\n                        <input type=\"submit\" value=\"Submit\" />\n                    </div>\n                </form>\n                {/* Add button */}\n                <button onClick={handleAddInputSet} style={{ position: 'absolute', bottom: '10px', left: '10px' }}>\n                    Add\n                </button>\n            </div>\n\n    \n        </>\n    );\n}\n\nexport default CreateCompany;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}